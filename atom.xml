<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://deus4xmachina.github.io/Hadesss.github.io/</id>
    <title>Hadesss&apos;s Area</title>
    <updated>2021-03-11T12:38:07.404Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://deus4xmachina.github.io/Hadesss.github.io/"/>
    <link rel="self" href="https://deus4xmachina.github.io/Hadesss.github.io/atom.xml"/>
    <subtitle>写给自己，当然也欢迎其他人</subtitle>
    <logo>https://deus4xmachina.github.io/Hadesss.github.io/images/avatar.png</logo>
    <icon>https://deus4xmachina.github.io/Hadesss.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Hadesss&apos;s Area</rights>
    <entry>
        <title type="html"><![CDATA[线程和进程 浏览器内核]]></title>
        <id>https://deus4xmachina.github.io/Hadesss.github.io/post/xian-cheng-he-jin-cheng-liu-lan-qi-nei-he/</id>
        <link href="https://deus4xmachina.github.io/Hadesss.github.io/post/xian-cheng-he-jin-cheng-liu-lan-qi-nei-he/">
        </link>
        <updated>2021-03-11T12:02:20.000Z</updated>
        <content type="html"><![CDATA[<p>🍧进程是指在系统中正在运行的一个应用程序。<br>
🍩线程是操作系统能够进行运算调度的最小单位，被包含在进程之中，是进程中的实际运作单位。一条线程指的是进程中一个单一顺序的控制流，一个进程中可以并发多个线程，每条线程并行执行不同的任务。</p>
<pre><code>    单线程方便编程，但是效率低。
    多线程效率高，但是会出现创建多线程的开销，线程之间切换还会有开销，也会有死锁和状态同步的问题
</code></pre>
<p>🍝Javascript是单线程运行的 但是H5中的Web Workers是可以多线程运行的<br>
🌯浏览器是多线程运行的 但是有多进程也有单进程 老版IE是单进程的</p>
<p>内核是支持浏览器运行的最核心的程序，由几个模块构成       🏳️主线程 🏴分线程<br>
🏳️JS引擎模块：负责js程序的编译和运行<br>
🏳️html、css文档解析模块：负责页面文本的解析<br>
🏳️DOM/css模块：负责DOM/css在内存中的相关处理 最终转换成对象<br>
🏳️布局和渲染模块：负责页面布局和效果的绘制，即绘制上一个模块最终转换出来的对象<br>
..<br>
🏴定时器模块：负责定时器的管理  （注意并不是这个函数运行在分线程里<br>
🏴事件响应模块：负责事件的管理<br>
🏴网络请求模块：Ajax请求</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Js高级 显式原型与隐式原型]]></title>
        <id>https://deus4xmachina.github.io/Hadesss.github.io/post/js-gao-ji-xian-shi-yuan-xing-yu-yin-shi-yuan-xing/</id>
        <link href="https://deus4xmachina.github.io/Hadesss.github.io/post/js-gao-ji-xian-shi-yuan-xing-yu-yin-shi-yuan-xing/">
        </link>
        <updated>2021-03-11T10:09:05.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<p>🍏function Person （） {<br>
// 创建函数的时候，内部语句：this.prototype = {} 一个空的Object对象<br>
}pro<br>
💡1.每个函数function都有一个prototype，即显式原型（属性）<br>
prototype指向函数的原型对象<br>
console.log(Person===Person.prototype.constructor)  //true<br>
💡2.每个实例对象都有一个__proto__，即称隐式原型（属性）</p>
<p>// 创建实例对象</p>
<p>🍎let person = new Person() // js引擎在创建实例的时候，做了一个赋值操作，内部语句：this.<strong>proto</strong> = Person.prototype</p>
<p>👀给原型添加方法</p>
<p>🍌Person.prototype.test = function () {</p>
<p>console.log('test()')；</p>
<p>}<br>
👀通过实例对象调用原型方法</p>
<p>🍉person.test()</p>
<p><img src="https://deus4xmachina.github.io/Hadesss.github.io//post-images/1615459012902.png" alt="" loading="lazy"><br>
1、定义构造函数🍏<br>
2、创建实例对象🍎<br>
3、给原型添加方法🍌<br>
4、通过实例对象调用原型的方法🍉</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于我第一次搞博客这件事]]></title>
        <id>https://deus4xmachina.github.io/Hadesss.github.io/post/guan-yu-wo-di-yi-ci-gao-bo-ke-zhe-jian-shi/</id>
        <link href="https://deus4xmachina.github.io/Hadesss.github.io/post/guan-yu-wo-di-yi-ci-gao-bo-ke-zhe-jian-shi/">
        </link>
        <updated>2021-03-11T07:07:23.000Z</updated>
        <content type="html"><![CDATA[<p>相信这应该是我这个博客的第一篇文章，应该总不至于丢失，所以感觉可以用来记录一些关于这个软件的操作指南，毕竟这个软件在很多时候会出现BUG。<br>
🔑首先就是tokens，刚刚又关掉那个网页了，所以也不知道之后出现问题再更换tokens的话内容会不会丢失，毕竟我github玩的很菜。<br>
🔑还有就是同步不成功的问题，先在开发者选项看看报了哪种错误吧，实在不行再去issues找找看...<br>
其他应该也就没什么了，记得保存。还有就是希望能每周产出两篇文章吧，不管是什么方面的，希望能用大白话认认真真地写💻</p>
<p>第一次有博客还是一个值得庆祝的事吧🍻🍻，虽然这并不能在严格意义上称作一个自主搭建的博客，但是由于水平和资金有限，现在就只能先这样了</p>
<p>之前搞过很多次博客，不过都是因为技术或者设备的原因没能最终完成，直到这次终于遇到了一个还算简单的软件，很迅速地帮我搭建好了自己的第一个博客，蛮开心的（以后终于有一个能记录生活、笔记地地方了），要是能分类就好了，把生活和笔记的东西分开来，这样我女朋友来看的时候就不至于看到很多让人头痛的代码辽...</p>
<p>第一次写就当划水了,以后还是不要划水了,尽量做个正经人吼🤡🤡🤡</p>
]]></content>
    </entry>
</feed>